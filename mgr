#!/bin/bash

# Colors
BLACK='\033[1;30m'        # Black
RED='\033[1;31m'          # Red
GREEN='\033[1;32m'        # Green
YELLOW='\033[1;33m'       # Yellow
BLUE='\033[1;34m'         # Blue
CYAN='\033[1;36m'         # Cyan
WHITE='\033[1;37m'        # White
LIGHT_GREEN='\033[0;32m'  # Light Green


automatic_git () {
  {
      COMMAND=$(git add .)
  }
  CMD_RETURN_CODE=$?

  echo -e "${YELLOW} --- Push changes to git repo ---"
    if [ $CMD_RETURN_CODE != 0 ]; then
        echo -e "${RED}Failed"
        git add . && git commit -m "Automatic commit via mgr command" && git push
    else
      echo -e "${GREEN}Success ${WHITE}"
      git add . && git commit -m "$1" && git push
    fi
}

backup_files () { 
  echo -e "${YELLOW} --- Creating Backups ---${WHITE}"

  [ -d $1 ] || mkdir $1
  cp -R ~/.ssh $1
  cp ~/.zshrc $1
  cp ~/.bashrc $1
  echo -e "${GREEN} --- Success ---"
}

default_apps () {
  sudo update-alternatives --config x-www-browser
  

}

usage="
  $(basename "$0") [-h] [-g] [-b] -- script that automates stuff


  Options:      Syntax:                             Description:

      -h        [mgr -h]                            show this help text
      -g        [mgr -g 'commit message']           Git add,commit, and push to Git in the current directory.
      -b        [mgr -b /full/path/to/backup/]      Create a backup for your bookmarks, .ssh folder, .zshrc and .bashrc

"

usage_git="
  $(basename "$0") [-g] -- Git add, commit & push


  Options:      Syntax:                             Description:
  
      -g        [mgr -g 'commit message']           Git add,commit, and push to Git in the current directory.


"

usage_backup="
  $(basename "$0") [-b] -- Command that create automatic backup in specified folder


  Options:      Syntax:                             Description:
  
      -b        [mgr -b /full/path/to/backup/]      Create a backup for your bookmarks, .ssh folder, .zshrc and .bashrc


"

while getopts ':-hbg' option; do
  case "$option" in
    h) echo "$usage"
       exit
       ;;
    g)
      if [ -z $2 ]; then
        echo "$usage_git"
      else
        automatic_git $2
      fi
      ;;
    b)
      if [ -z $2 ]; then
        echo "$usage_backup"
      else
        backup_files $2
      fi
      ;;
   \?) echo "illegal option:" "$OPTARG" >&2
       echo "$usage" >&2
       exit 1
       ;;
  esac
done

shift "$(($OPTIND -1))"
